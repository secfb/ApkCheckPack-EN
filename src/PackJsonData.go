package main

import (
	"encoding/base64"
	"encoding/json"
	"fmt"
)

type ApkPackJson struct {
	//packdata struct {
	Sopath  []string
	Soname  []string
	Other   []string
	Soregex []string
	//}
}

func GetApkPackMap() map[string]ApkPackJson {
	// Base64-encoded JSON string
	apkpackdata := ""
// Standard Base64 decode
apkpackbytes, err := base64.StdEncoding.DecodeString(apkpackdata)
	if err != nil {
    fmt.Println("Base64 parse failed:", err)
		return nil
	}
// Parse JSON data into map[string]ApkPackJson
	var apkmap map[string]ApkPackJson
	err = json.Unmarshal(apkpackbytes, &apkmap)
	if err != nil {
    fmt.Println("JSON parse failed:", err)
		return nil
	}
// Test output: iterate map to get key/value
	//for key, value := range apkmap {
//	fmt.Println("Vendor:", key)
	//	for _, s := range value.Sopath {
	//		fmt.Println("Sopath:", s)
	//	}
	//	for _, s := range value.Soname {
	//		fmt.Println("Soname:", s)
	//	}
	//	for _, s := range value.Other {
	//		fmt.Println("Other:", s)
	//	}
	//	for _, s := range value.Soregex {
	//		fmt.Println("Soregex:", s)
	//	}
	//}

	return apkmap
}
